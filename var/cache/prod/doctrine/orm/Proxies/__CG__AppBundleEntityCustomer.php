<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Customer extends \AppBundle\Entity\Customer implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'sexe', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'firstname', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'lastname', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'society', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'adress', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'cp', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'town', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'phonenumber', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'factures', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'tickets'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'sexe', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'firstname', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'lastname', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'society', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'adress', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'cp', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'town', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'phonenumber', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'factures', '' . "\0" . 'AppBundle\\Entity\\Customer' . "\0" . 'tickets'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Customer $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSexe($sexe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSexe', [$sexe]);

        return parent::setSexe($sexe);
    }

    /**
     * {@inheritDoc}
     */
    public function getSexe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSexe', []);

        return parent::getSexe();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstname($firstname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstname', [$firstname]);

        return parent::setFirstname($firstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstname', []);

        return parent::getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastname($lastname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastname', [$lastname]);

        return parent::setLastname($lastname);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastname', []);

        return parent::getLastname();
    }

    /**
     * {@inheritDoc}
     */
    public function setSociety($society)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSociety', [$society]);

        return parent::setSociety($society);
    }

    /**
     * {@inheritDoc}
     */
    public function getSociety()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSociety', []);

        return parent::getSociety();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdress($adress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdress', [$adress]);

        return parent::setAdress($adress);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdress', []);

        return parent::getAdress();
    }

    /**
     * {@inheritDoc}
     */
    public function setCp($cp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCp', [$cp]);

        return parent::setCp($cp);
    }

    /**
     * {@inheritDoc}
     */
    public function getCp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCp', []);

        return parent::getCp();
    }

    /**
     * {@inheritDoc}
     */
    public function setTown($town)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTown', [$town]);

        return parent::setTown($town);
    }

    /**
     * {@inheritDoc}
     */
    public function getTown()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTown', []);

        return parent::getTown();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhonenumber($phonenumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhonenumber', [$phonenumber]);

        return parent::setPhonenumber($phonenumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhonenumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhonenumber', []);

        return parent::getPhonenumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserEmail($userEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserEmail', [$userEmail]);

        return parent::setUserEmail($userEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserEmail', []);

        return parent::getUserEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacturesReference($facturesReference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacturesReference', [$facturesReference]);

        return parent::setFacturesReference($facturesReference);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacturesReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacturesReference', []);

        return parent::getFacturesReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\AppBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addFacture(\AppBundle\Entity\Facture $facture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFacture', [$facture]);

        return parent::addFacture($facture);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFacture(\AppBundle\Entity\Facture $facture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFacture', [$facture]);

        return parent::removeFacture($facture);
    }

    /**
     * {@inheritDoc}
     */
    public function getFactures()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFactures', []);

        return parent::getFactures();
    }

    /**
     * {@inheritDoc}
     */
    public function addTicket(\AppBundle\Entity\Ticket $ticket)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTicket', [$ticket]);

        return parent::addTicket($ticket);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTicket(\AppBundle\Entity\Ticket $ticket)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTicket', [$ticket]);

        return parent::removeTicket($ticket);
    }

    /**
     * {@inheritDoc}
     */
    public function getTickets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTickets', []);

        return parent::getTickets();
    }

}
